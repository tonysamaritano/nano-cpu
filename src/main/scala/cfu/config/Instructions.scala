package cfu.config

import chisel3._
import chisel3.util.BitPat

object Instructions {
    /* Arithmetic Operations */
    def ADD  = BitPat("b_000?_????_????_?000")
    def ADDI = BitPat("b_001?_????_????_?000")
    def SUB  = BitPat("b_010?_????_????_?000")

    /* Logical Operations */
    def AND  = BitPat("b_000?_????_????_?001")
    def OR   = BitPat("b_001?_????_????_?001")
    def XOR  = BitPat("b_010?_????_????_?001")
    def NOT  = BitPat("b_011?_????_????_?001")
    def SLL  = BitPat("b_100?_????_????_?001")
    def SLLI = BitPat("b_101?_????_????_?001")
    def SRL  = BitPat("b_110?_????_????_?001")
    def SRLI = BitPat("b_111?_????_????_?001")

    /* Load */
    def LB   = BitPat("b_?00?_????_????_?010")
    def LW   = BitPat("b_?01?_????_????_?010")
    def LLI  = BitPat("b_?10?_????_????_?010")
    def LUAI = BitPat("b_?11?_????_????_?010")

    /* Store */
    def SB   = BitPat("b_?00?_????_????_?011")
    def SW   = BitPat("b_?01?_????_????_?011")

    /* Comparison */
    def EQ   = BitPat("b_000?_????_????_?100")
    def NEQ  = BitPat("b_001?_????_????_?100")
    def GE   = BitPat("b_010?_????_????_?100")
    def GEU  = BitPat("b_011?_????_????_?100")
    def LT   = BitPat("b_100?_????_????_?100")
    def LTU  = BitPat("b_101?_????_????_?100")

    /* Jumps */
    def JALR = BitPat("b_?00?_????_????_?101")
    def JAL  = BitPat("b_?01?_????_????_?101")

    /* Branch */
    def BR   = BitPat("b_?00?_????_????_?110")

    /* AUX */
    def CLR  = BitPat("b_000?_????_????_?111")
    def FLG  = BitPat("b_001?_????_????_?111")
    def HLT  = BitPat("b_111?_????_????_?111")
}